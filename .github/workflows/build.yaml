name: Build samples

on:
  workflow_dispatch:
  push:
    branches:
      - edge
      - v*.*
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - edge
      - v*.*

concurrency:
  group: build-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  VERSION: ${{ github.event.pull_request.number || 'edge' }}
  # Use radiusdev.azurecr.io for PR build. Otherwise, use radius.azurecr.io.
  DOCKER_REGISTRY: ${{ github.event.pull_request.number && 'radiusdev.azurecr.io' || 'radius.azurecr.io' }}

jobs:
  build:
    name: Build and push ${{ matrix.name }}
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: demo
            path: ./demo/
            tag: tutorial/demo
          - name: webapp
            path: ./demo/
            tag: tutorial/webapp
          - name: dapr-backend
            path: ./quickstarts/dapr/nodeapp/
            tag: quickstarts/dapr-backend
          - name: dapr-frontend
            path: ./quickstarts/dapr/ui/
            tag: quickstarts/dapr-frontend
          - name: aws-reference-app
            path: ./reference-apps/aws/
            tag: reference-apps/aws
          - name: environment-variables
            path: ./quickstarts/environment-variables/
            tag: quickstarts/envvars
          - name: volumes
            path: ./quickstarts/volumes/
            tag: quickstarts/volumes
          - name: aws-sqs
            path: ./reference-apps/aws-sqs/
            tag: reference-apps/aws-sqs-sample
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.2
      - name: Login to container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.DOCKER_REGISTRY }}
          username: '${{ secrets.AZURE_SP_DOCKER_USERNAME }}'
          password: '${{ secrets.AZURE_SP_DOCKER_PASSWORD }}'
      - name: Build ${{ matrix.name }}
        run: docker build ${{ matrix.path }} -t "${{ env.DOCKER_REGISTRY }}/${{ matrix.tag }}:${{ env.VERSION }}"
      - name: Push ${{ matrix.name }}
        run: docker push "${{ env.DOCKER_REGISTRY }}/${{ matrix.tag }}:${{ env.VERSION }}"
  cleanup:
    name: Cleanup ${{ matrix.image }}
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: [
          tutorial/webapp,
          tutorial/demo,
          quickstarts/dapr-backend,
          quickstarts/dapr-frontend,
          quickstarts/envvars,
          quickstarts/volumes,
          reference-apps/aws,
          reference-apps/aws-sqs-sample,
        ]
    steps:
      - name: Login to az cli and ACR
        run: |
          az login --service-principal --username ${{ secrets.AZURE_SP_DOCKER_USERNAME }} --password ${{ secrets.AZURE_SP_DOCKER_PASSWORD }} --tenant ${{ secrets.AZURE_SP_DOCKER_TENANT }}
          az acr login --name ${{ env.DOCKER_REGISTRY }}
      - name: Delete PR images
        run: az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "${{ matrix.image }}:${{ env.VERSION }}" --yes