name: Build samples

on:
  workflow_dispatch:
  push:
    branches:
      - edge
      - v*.*
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - edge
      - v*.*

concurrency:
  group: build-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  VERSION: ${{ github.event.pull_request.number || 'latest' }}
  # Use ghcr.io/radius-project/dev for PR build. Otherwise, use ghcr.io/radius-project.
  CONTAINER_REGISTRY: ${{ github.event.pull_request.number && 'ghcr.io/radius-project/dev' || 'ghcr.io/radius-project' }}
 
jobs:
  build-ghcr:
    name: Build and push sample images to GHCR
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - directory: samples/demo/
            image: samples/demo
          - directory: samples/dapr/ui/
            image: samples/dapr-frontend
          - directory: samples/dapr/nodeapp/
            image: samples/dapr-backend
          - directory: samples/aws/
            image: samples/aws
          - directory: samples/aws-sqs/
            image: samples/aws-sqs
          - directory: samples/volumes/
            image: samples/volumes
    steps:
      - name: Evaluate PUSH_IMAGE
        id: eval_push_image
        run: |
            if [[ "${{ github.event_name }}" == "push" ]]; then
              PUSH_IMAGE=TRUE
            else
              PUSH_IMAGE=TRUE
            fi
            echo "PUSH_IMAGE=${PUSH_IMAGE}" >> $GITHUB_OUTPUT
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "event name is:" ${{ github.event_name }} 
      - run: echo "event type is:" ${{ github.event.action }} 
      - name: Build and push ${{ matrix.image }}
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.directory }}
          push: steps.eval_push_image.outputs.PUSH_IMAGE
          tags: ${{ env.CONTAINER_REGISTRY }}/${{ matrix.image }}:${{ env.VERSION }}
