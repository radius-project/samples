name: Build samples

on:
  push:
    branches:
      - edge
      - v*.*
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - edge
      - v*.*

env:
  VERSION: ${{ github.event.pull_request.number || 'edge' }}
  # Use radiusdev.azurecr.io for PR build. Otherwise, use radius.azurecr.io.
  DOCKER_REGISTRY: ${{ github.event.pull_request.number && 'radiusdev.azurecr.io' || 'radius.azurecr.io' }}

jobs:
  build:
    name: Build and push quickstart container images
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.DOCKER_REGISTRY }}
          username: '${{ secrets.AZURE_SP_DOCKER_USERNAME }}'
          password: '${{ secrets.AZURE_SP_DOCKER_PASSWORD }}'
      - name: Build and push tutorial webapp images
        run: |
          docker build ./tutorial/ -t "${{ env.DOCKER_REGISTRY }}/tutorial/webapp:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/tutorial/webapp:${{ env.VERSION }}"
      - name: Build and push quickstart Dapr images
        run: |
          docker build ./quickstarts/dapr/nodeapp/ -t "${{ env.DOCKER_REGISTRY }}/quickstarts/dapr-backend:${{ env.VERSION }}"
          docker build ./quickstarts/dapr/ui/ -t "${{ env.DOCKER_REGISTRY }}/quickstarts/dapr-frontend:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/quickstarts/dapr-backend:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/quickstarts/dapr-frontend:${{ env.VERSION }}"
      - name: Build and push quickstart AWS images
        run: |
          docker build ./reference-apps/aws/ -t "${{ env.DOCKER_REGISTRY }}/reference-apps/aws:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/reference-apps/aws:${{ env.VERSION }}"
      - name: Build and push environment variables quickstart image
        run: |
          docker build ./quickstarts/environment-variables/ -t "${{ env.DOCKER_REGISTRY }}/quickstarts/envvars:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/quickstarts/envvars:${{ env.VERSION }}"
      - name: Build and push volumes quickstart image
        run: |
          docker build ./quickstarts/volumes/ -t "${{ env.DOCKER_REGISTRY }}/quickstarts/volumes:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/quickstarts/volumes:${{ env.VERSION }}"
      - name: Build and push aws-sqs quickstart images
        run: |
          docker build ./reference-apps/aws-sqs/ -t "${{ env.DOCKER_REGISTRY }}/reference-apps/aws-sqs-sample:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/reference-apps/aws-sqs-sample:${{ env.VERSION }}"
      - name: Build and push reference-apps container app store images
        run: |
          docker build ./reference-apps/container-app-store/go-service/ -t "${{ env.DOCKER_REGISTRY }}/reference-apps/container-app-go-service:${{ env.VERSION }}"
          docker build ./reference-apps/container-app-store/node-service/ -t "${{ env.DOCKER_REGISTRY }}/reference-apps/container-app-node-service:${{ env.VERSION }}"
          docker build ./reference-apps/container-app-store/python-service/ -t "${{ env.DOCKER_REGISTRY }}/reference-apps/container-app-python-service:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/reference-apps/container-app-go-service:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/reference-apps/container-app-node-service:${{ env.VERSION }}"
          docker push "${{ env.DOCKER_REGISTRY }}/reference-apps/container-app-python-service:${{ env.VERSION }}"
  code:
    name: Zip and upload code
    if: github.ref == 'refs/heads/edge'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Parse release version and set environment variables
        run: python ./.github/scripts/get_release_version.py
      - name: Generate Code ZIP Packages
        run: |
          mkdir ./tzip
          cp ./tutorial/azure-cosmosdb.bicep ./tutorial/mongo-container.bicep ./tutorial/app.bicep ./tzip/
          zip -r ./tutorial.zip ./tzip/
      - name: Upload zip artifacts to blob storage
        uses: bacongobbler/azure-blob-storage-upload@main
        with:
          source_dir: ./
          container_name: code
          connection_string: ${{ secrets.RADIUSPUBLIC_BLOBSTORAGE_CONNECTIONSTRING }}
          extra_args: '--destination-path ${{ env.REL_CHANNEL }}/ --pattern *.zip --timeout 300'
          overwrite: 'true'
  cleanup:
    name: Cleanup PR images
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Login to az cli and ACR
        run: |
          az login --service-principal --username ${{ secrets.AZURE_SP_DOCKER_USERNAME }} --password ${{ secrets.AZURE_SP_DOCKER_PASSWORD }} --tenant ${{ secrets.AZURE_SP_DOCKER_TENANT }}
          az acr login --name ${{ env.DOCKER_REGISTRY }}
      - name: Delete PR images
        run: |
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "tutorial/webapp:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "quickstarts/dapr-backend:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "quickstarts/dapr-frontend:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "quickstarts/envvars:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "quickstarts/volumes:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "reference-apps/aws:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "reference-apps/aws-sqs-sample:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "reference-apps/container-app-go-service:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "reference-apps/container-app-node-service:${{ env.VERSION }}" --yes
          az acr repository delete --name ${{ env.DOCKER_REGISTRY }} --image "reference-apps/container-app-python-service:${{ env.VERSION }}" --yes
